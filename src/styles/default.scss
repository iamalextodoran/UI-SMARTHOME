@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap");

html {
  margin: 0;
  padding: 0;
}

body {
  font-family: "Roboto", sans-serif;
  background: #ecf0f3;
  margin: 25px 5em;
}

a,
a:link,
a:hover,
a:focus,
a:visited,
a:active {
  color: none;
  text-decoration: none;
  background: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 1rem;
  margin-top: 1rem;
}

h1 {
  font-size: 2rem;
  font-weight: 500;
  letter-spacing: 0.005em;
}

h2 {
  font-size: 1.6rem;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 2.4rem;
}

h3 {
  font-size: 1.4rem;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 2.4rem;
}

h4 {
  font-size: 1.2rem;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 2.4rem;
}

h5 {
  font-size: 1.1rem;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 2.4rem;
}

h6 {
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: 0.01em;
  line-height: 2.4rem;
}

p {
  font-size: 0.875rem;
  font-weight: 300;
  letter-spacing: 0.01em;
  line-height: 1.6em;
  margin: 0.8em 0 1.6em;
}

strong {
  font-weight: 500;
}

blockquote {
  border-left: 3px solid rgba(0, 0, 0, 0.12);
  font-style: italic;
  margin-left: 0;
  padding-left: 16px;
}

//////////////////////////////
////                      ////
////   Flexbox classes    ////
////                      ////
//////////////////////////////

$flex-directions: (row, column);

$justify-positions: (
  none: none,
  start: flex-start,
  end: flex-end,
  center: center,
  space-around: space-around,
  space-between: space-between,
  space-evenly: space-evenly,
);
$align-positions: (
  none: none,
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
  baseline: baseline,
);

@mixin flex-layout($direction, $justify, $align) {
  @each $direction-name in $direction {
    .layout-#{$direction-name} {
      display: flex;
      flex-direction: #{$direction-name};
      @each $justify-name, $justify-property in $justify {
        @each $align-name, $align-property in $align {
          &.layout-align-#{$justify-name}-#{$align-name} {
            align-items: #{$align-property};
            justify-content: #{$justify-property};
          }
        }
      }
    }
  }
}
@mixin flex-order() {
  .flex {
    flex: auto;
    @for $i from -20 through 20 {
      &.flex-order-#{$i} {
        order: $i;
      }
    }
  }
}

@mixin flex-percent {
  @for $i from 1 through 20 {
    .flex-#{$i*5} {
      flex: #{$i * 5 + "%"};
    }
  }
  @for $i from 1 through 3 {
    .flex-#{$i*33} {
      flex: #{$i * 33 + "%"};
    }
  }
}
@include flex-order();
@include flex-percent();
@include flex-layout($flex-directions, $justify-positions, $align-positions);

.flex-wrap {
  flex-wrap: wrap;
}
.flex-no-wrap {
  flex-wrap: nowrap;
}

.layout-xs-column {
  @media (max-width: 600px) {
    flex-direction: column;
  }
}
.small {
  display: none;
}

@media only screen and (min-width: 960px) {
  /* styles for browsers larger than 960px; */
}
@media only screen and (min-width: 1440px) {
  /* styles for browsers larger than 1440px; */
}
@media only screen and (min-width: 2000px) {
  /* for sumo sized (mac) screens */
}
@media only screen and (max-device-width: 480px) {
  /* styles for mobile browsers smaller than 480px; (iPhone) */
  .big {
    display: none;
  }
  .small {
    display: block;
  }
  body {
    margin: 10px;
  }
}

@media only screen and (device-width: 768px) {
  /* default iPad screens */
}
/* different techniques for iPad screening */
@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: portrait) {
  /* For portrait layouts only */
}

@media only screen and (min-device-width: 481px) and (max-device-width: 1024px) and (orientation: landscape) {
  /* For landscape layouts only */
}

